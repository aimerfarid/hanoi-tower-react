{"version":3,"sources":["components/disc.jsx","components/tower.jsx","components/successAlert.js","components/errorAlert.js","components/towers.jsx","components/navbar.jsx","components/reducer.jsx","App.js","index.js"],"names":["Disc","_ref","size","topDisc","startDrag","discStyle","width","background","react_default","a","createElement","className","style","draggable","onDragStart","Tower","towerDiscs","maxSize","startTopDiscDrag","dropDisc","towerStyle","pillarStyle","height","onDragOver","e","preventDefault","onDrop","map","i","components_disc","key","toString","SuccessAlert","role","Component","ErrorAlert","Towers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetForm","setState","baseState","console","log","discNum","towerNum","discMoves","discs","createHanoiTower","state","alert_message","startTower","_","range","Array","val","activeTower","d","dM","destTower","_this2","sourceTower","disc","toConsumableArray","tail","concat","length","classes","_this3","_this$props","onReset","onIncrement","successAlert_SuccessAlert","errorAlert_ErrorAlert","getMoveBadgeClasses","formatMoveCount","tower","solutionTower","getIncBadgeClasses","formatIncCount","onClick","Navbar","totalCounters","reducer","action","store","createStore","App","handleIncrement","handleReset","es","navbar","towers","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b6e23814.chunk.js","sourcesContent":["import React from 'react';\n// Disc Class\nconst Disc = ({size, topDisc, startDrag}) => {\n  const discColors = [\n    'linear-gradient(to right, black, gray)',\n    'linear-gradient(to right, yellow, red)',\n    'linear-gradient(to right, lime, green)',\n    'linear-gradient(to right, cyan, steelblue)',\n    'linear-gradient(to right, sandybrown, maroon)',\n    'linear-gradient(to right, orange, orangered)',\n    'linear-gradient(to right, magenta, indigo)',\n    'linear-gradient(to right, lightseagreen, navy)',\n  ];\n  const discWidth = (size + 1.5) * 25;\n  const discStyle = {\n    width: discWidth + 'px',\n    background: discColors[size % 8],\n  };\n\n  return (\n    <div\n      className='disc'\n      style={discStyle}\n      draggable={topDisc}\n      onDragStart={startDrag}\n    >\n      <span className='disc-label'>\n        {size}\n      </span>\n    </div>\n  );\n}\n\nexport default Disc;\n","import React from 'react';\nimport Disc from './disc'\n\n// Tower Class\nconst Tower = ({towerDiscs, maxSize, startTopDiscDrag, dropDisc}) => {\n  const towerStyle = {width: (maxSize + 3) * 25};\n  // set fix height of 100pixel\n  const pillarStyle = {height: 100 + maxSize * 20};\n\n  return (\n    <div\n      className='tower'\n      style={towerStyle}\n      onDragOver={(e) => {e.preventDefault()}}\n      onDrop={dropDisc}\n    >\n      <div className='tower-pillar' style={pillarStyle} />\n      <div className='tower-base' />\n      <div className='disc-group'>\n        {towerDiscs.map((size, i) =>\n          <Disc\n            key={size.toString()}\n            size={size}\n            topDisc={i===0}\n            startDrag={startTopDiscDrag}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tower;\n","import React, { Component } from 'react';\n\nexport default class SuccessAlert extends Component {\n  render() {\n    return (\n      <div className=\"alert alert-success\" role=\"alert\">\n        Congratulations! You've won!\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class ErrorAlert extends Component {\n  render() {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Wrong Move! Smaller disc are only allowed~\n      </div>\n    )\n  }\n}\n","import _ from 'lodash';\nimport React, {Component} from 'react';\nimport Tower from './tower';\nimport SuccessAlert from './successAlert';\nimport ErrorAlert from './errorAlert';\n\n// Establashing Hanoi Tower Class\nclass Towers extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.discNum);\n    const discNum = props.discNum;\n    const towerNum = props.towerNum;\n    const discMoves = props.discMoves;\n    const discs = this.createHanoiTower(discNum, towerNum);\n    this.state = {\n      discs, discMoves, discNum, towerNum,\n      alert_message: ''\n    };\n    this.baseState = this.state;\n  }\n\n  resetForm = () => {\n    this.setState(this.baseState);\n  }\n\n  createHanoiTower(discNum, towerNum) {\n    const startTower = _.range(1, discNum + 1);\n    const discTower = _.map(Array(towerNum),\n      (val, i) => i === 0 ? startTower : []\n    );\n    return discTower;\n  }\n\n  // Initialize dragging the towers\n  startTopDiscDrag(activeTower) {\n    this.activeTower = activeTower;\n  }\n\n  // Solution which will prompt reset\n  solutionTower(d, dM) {\n    console.log('Moves from solution function', dM);\n    // console.log('Discs Destination: ', discs[destTower], ' Index:', destTower,' Length:', discs[destTower].length);\n    // if ((destTower !== 0 && discs[destTower].length === this.state.discNum)) {\n    //   console.log('You\\'ve Won with: ', this.state.discMoves, );\n    // }\n    return;\n  }\n\n  // Dropping Target to designated towers while counting moves\n  dropDisc(destTower, discMoves) {\n    const sourceTower = this.activeTower;\n    // discMoves++;\n    // const discMoves = this.state.discMoves;\n    this.activeTower = null;\n    if (sourceTower === destTower || sourceTower === null) return;\n    this.setState((state) => {\n      const disc = state.discs[sourceTower][0];\n      // Return back to it's original position\n      if (state.discs[destTower][0] < disc) {\n        console.log('you cant do that');\n        return {state, alert_message:'error'};\n      }\n      let discs = [...state.discs];\n      discs[sourceTower] = _.tail(discs[sourceTower]);\n      discs[destTower] = [disc, ...state.discs[destTower]];\n      discMoves++;\n      console.log('Moves', discMoves);\n\n      // SOLUTION TO THE HANOI TOWER!\n      if ((destTower !== 0 && discs[destTower].length === this.state.discNum)) {\n        console.log('You\\'ve Won with: ', discMoves, ' Moves' );\n        return {discs, discMoves: this.state.discMoves + 1, alert_message:'success'}\n      }\n      // discMoves: discMoves;\n      return {discs, discMoves: this.state.discMoves + 1, alert_message:''};\n    });\n  }\n\n  // Count Movements\n  getMoveBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.discMoves === 0 ? 'warning' : this.state.alert_message === 'success' ? 'success' : 'primary';\n    return classes;\n  }\n\n  // Personal style for Moves badge\n  formatMoveCount() {\n    const { discMoves } = this.state;\n    return discMoves === 0 ? \"Zero\" : discMoves;\n  }\n\n  // Number of discs in the Tower\n  getIncBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.discNum === 0 ? \"warning\" : \"dark\";\n    return classes;\n  }\n\n  // Changes the number of discs in towers\n  formatIncCount() {\n    const { discNum } = this.state;\n    return discNum === 0 ? \"Zero\" : discNum;\n  }\n\n  render() {\n    const {onReset, onIncrement} = this.props;\n    return (\n      <div>\n        <hr/>\n        {this.state.alert_message==='success'?<SuccessAlert/>:null}\n        {this.state.alert_message==='error'?<ErrorAlert/>:null}\n        <span className={this.getMoveBadgeClasses()}>Moves: {this.formatMoveCount()}</span>\n        <div>\n          {this.state.discs.map((towerDiscs, i) =>\n            <Tower\n              key={i+1}\n              towerDiscs={towerDiscs}\n              maxSize={8}\n              startTopDiscDrag={() => this.startTopDiscDrag(i)}\n              dropDisc={() => this.dropDisc(i, this.state.discMoves)}\n              solutionTower={() => this.solutionTower(i)}\n            />\n          )}\n        </div>\n        <span className={this.getIncBadgeClasses()}>Disc Number: {this.formatIncCount()}</span>\n        <div>\n          <button\n            onClick={this.resetForm}\n            className=\"btn btn-sm btn-info ml-3\"\n            >\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Towers;\n\n\n  // // Changing disc values\n  // handleIncrement = product => {\n  //   // this.state.count++;\n  //   const {value} = this.props;\n  //   this.setState({ value: this.state.value + 1 });\n  //   console.log(\"Increment Clicked\", this.state.value);\n  //   // obj.method();\n  //   // function();\n  // };\n","import React from \"react\";\n\n// Stateless Functional Component\n\nconst Navbar = ({totalCounters}) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <a className=\"navbar-brand mx-auto\">\n        Emir's Hanoi Tower{\" \"}\n      </a>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const reducer = (state, action) => state;\n\nexport default reducer;\n","import React, {Component} from 'react';\nimport Towers from './components/towers';\nimport Navbar from './components/navbar';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './components/reducer';\n\nlet store = createStore(reducer);\n\nclass App extends Component {\n  state = {\n    towerNum: 3,\n    discNum: 3,\n    discMoves: 0\n  };\n\n  handleIncrement = () => {\n    console.log('onIncrement is clicked');\n    const discNum = this.state.discNum;\n    this.setState({discNum: discNum + 1 });\n    console.log('onIncrement discNum', discNum);\n  };\n\n  handleReset = () => {\n    console.log('onReset is clicked');\n    const discNum = this.state.discNum;\n    this.setState({discNum});\n  }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Navbar/>\n        <main className=\"container\">\n          <Towers\n            towerNum={this.state.towerNum}\n            discNum={this.state.discNum}\n            discMoves={this.state.discMoves}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n             />\n        </main>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}